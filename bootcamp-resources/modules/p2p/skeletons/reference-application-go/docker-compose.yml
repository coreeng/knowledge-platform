version: '3'
volumes:
  db-data:
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1452
services:
  service:
    container_name: service
    hostname: service
    environment:
      - DOWNSTREAM_HOST=podinfo
      - POSTGRES_HOST=database
    build:
      dockerfile: Dockerfile.service
      context: .
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:8080/hello" ]
      interval: 5s
      retries: 5
      start_period: 10s
      timeout: 10s
    depends_on:
      database:
        condition: service_healthy
  k6:
    image: grafana/k6
    volumes:
      - .:/opt/app
    working_dir: /opt/app

  go_build:
    image: "golang:1.21-alpine"
    volumes:
      - .:/opt/app
    working_dir: /opt/app/cmd/service

  downstream:
    container_name: podinfo
    hostname: podinfo
    image: stefanprodan/podinfo:6.2.2
    ports:
      - "9898:9898"

  database:
    container_name: database
    hostname: database
    image: 'postgres:15.0-bullseye'
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_PASSWORD=password

  godog:
    image: "golang:1.21-alpine"
    environment:
      - SERVICE_ENDPOINT=${SERVICE_ENDPOINT}
    volumes:
      - .:/opt/app
    working_dir: /opt/app

  waitForHealthyPods:
    image: alpine:latest
    depends_on:
      service:
        condition: service_healthy
